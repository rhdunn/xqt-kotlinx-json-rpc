# Copyright (C) 2023 Reece H. Dunn. SPDX-License-Identifier: Apache-2.0
name: Build Kotlin/JS
on:
  workflow_dispatch:
    inputs:
      mavenCentralRepository:
        description: The Maven Central (Sonatype) repository to publish artifacts to.
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - snapshot
          - release
  push:
    branches:
      - "*"

env:
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
  SIGNING_KEY_PRIVATE: ${{ secrets.SIGNING_KEY_PRIVATE }}
  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
  MAVEN_CENTRAL_REPOSITORY: ${{ inputs.mavenCentralRepository || 'none' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Source Code Checkout
        uses: actions/checkout@v3

      - name: Setup Gradle 8.1.1
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1

      - name: Build for Kotlin/JS
        run: gradle -D nodejs.download=false jsJar

      - name: Tar Build Artifacts
        run: tar -cvf build-js-artifacts.tar .

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-js
          path: build-js-artifacts.tar

  test-node:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ 16, 18 ]
    steps:
      - name: Setup Gradle 8.1.1
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-js

      - name: Extract Build Artifacts
        run: tar -xf build-js-artifacts.tar

      - name: Setup Node ${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Test for Kotlin/JS on Node
        run: gradle -D nodejs.download=false jsNodeTest

  test-browser:
    needs: build
    strategy:
      matrix:
        karma-browser: [
          chrome,
          firefox,
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Gradle 8.1.1
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-js

      - name: Extract Build Artifacts
        run: tar -xf build-js-artifacts.tar

      - name: Setup Chrome Latest
        if: matrix['karma-browser'] == 'chrome'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: 'latest'

      - name: Setup Firefox Latest
        if: matrix['karma-browser'] == 'firefox'
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: 'latest'

      # The yarn.lock file may change depending on the configured Karma browser,
      # so update it here to prevent build failures.
      - name: Update the Yarn Lock File
        run: gradle -D nodejs.download=false -D karma.browser=${{ matrix.karma-browser }} kotlinUpgradeYarnLock

      - name: Test for Kotlin/JS
        run: gradle -D nodejs.download=false -D karma.browser=${{ matrix.karma-browser }} jsBrowserTest

  publish:
    needs: [ test-node, test-browser ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Gradle 8.1.1
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 8.1.1

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-js

      - name: Extract Build Artifacts
        run: tar -xf build-js-artifacts.tar

      - name: Publish Kotlin/JS to Maven Local
        run: gradle --stacktrace -D nodejs.download=false -D maven.sign=env publishJsPublicationToMavenLocal

      - name: Publish Kotlin/JS to Maven Central
        if: env.OSSRH_USERNAME && env.MAVEN_CENTRAL_REPOSITORY != 'none'
        run: gradle --stacktrace -D nodejs.download=false -D maven.sign=env -D maven.repository.sonatype=${{ env.MAVEN_CENTRAL_REPOSITORY }} publishJsPublicationToMavenCentral
